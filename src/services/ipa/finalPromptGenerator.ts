
import { AgentStatus } from "@/types/ipa-types";

export class FinalPromptGenerator {
  static async generate(agents: AgentStatus[]): Promise<string> {
    const agentOutputs = agents
      .filter(agent => agent.status === "completed" && agent.output)
      .map(agent => ({ agent: agent.agent, output: agent.output || "" }));
    
    if (agentOutputs.length === 0) {
      throw new Error("No completed agent outputs found");
    }
    
    const finalPrompt = `# Cursor AI - Project Implementation Prompt
Generated by Intelligent Prompt Architect (IPA)

## Project Overview
${agentOutputs.find(a => a.agent === "RequirementDecompositionAgent")?.output || "No project overview available."}

## Technical Implementation Guide

${agentOutputs
  .filter(a => a.agent !== "RequirementDecompositionAgent" && a.agent !== "QualityAssuranceAgent")
  .map(a => `### ${a.agent.replace("Agent", "").replace("TechStackImplementation", "Tech Stack").replace("_", " - ")}\n${a.output}`)
  .join('\n\n')}

## Quality Assurance & Best Practices
${agentOutputs.find(a => a.agent === "QualityAssuranceAgent")?.output || "No quality considerations available."}

## Implementation Roadmap
1. **Setup & Configuration**: Initialize project with selected tech stack
2. **Core Architecture**: Implement basic application structure and routing
3. **Database & Storage**: Set up data persistence and vector storage (if applicable)
4. **Authentication**: Implement user authentication and authorization
5. **API Development**: Create backend APIs and endpoints
6. **Frontend Development**: Build user interface components and pages
7. **Agent Integration**: Implement A2A communication and MCP protocols
8. **RAG Implementation**: Set up retrieval-augmented generation (if applicable)
9. **Testing & QA**: Comprehensive testing and quality assurance
10. **Deployment**: Deploy to production environment

---
*This comprehensive prompt has been compiled from ${agentOutputs.length} specialized AI agents to ensure complete coverage of your project requirements.*`;

    return finalPrompt;
  }
}
